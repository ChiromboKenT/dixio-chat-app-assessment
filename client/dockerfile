FROM node:16-alpine as development

#Set up working DIR
WORKDIR /app

#Copy Package*.json files to workdir
COPY package*.json .

#Install dependencies, If in production skip installing dev dependencies
ARG NODE_ENV

RUN npm ci


#Copy over rest files required for compilation
COPY . .
EXPOSE 4200

#Execute start command
CMD [ "npm", "start" ]

##################
##  Build       ##
##################

FROM node:16-alpine as build

ARG NODE_ENV
ENV NODE_ENV=${NODE_ENV}
WORKDIR /app/build
COPY --from=development app/ .

RUN npm run build

##################
##  Production  ##
##################
FROM nginx:latest as production

# Copy the build output to replace the default nginx contents.
COPY --from=build /app/build/dist/ /usr/share/nginx/html

# Expose port 80
EXPOSE 80



